module.exports = {
  root: true,
  env: {
    node: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:compat/recommended',
    'plugin:import/errors',
    'plugin:import/warnings',
    'plugin:import/typescript',
    'plugin:import/recommended',
    'plugin:react/recommended',
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    parser: '@typescript-eslint/parser',
    ecmaVersion: 2020,
    sourceType: 'module',
  },
  plugins: [
    '@typescript-eslint/eslint-plugin',
    'react-hooks',
    'compat',
    'import',
    'react',
    'unicorn',
  ],
  settings: {
    'import/resolver': 'webpack',
  },
  rules: {
    'quotes': ['error', 'single'],
    'semi': ['error', 'never'],
    'comma-dangle': ['error', 'always-multiline'],
    'arrow-parens': ['error', 'always'],
    'object-curly-spacing': ['error', 'always'],
    'no-console': process.env.NODE_ENV === 'production' ? 'error' : 'off',
    'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'off',
    'max-len': 'off',
    'linebreak-style': 'off',
    'camelcase': [
      'error',
      {
        properties: 'never',
        ignoreDestructuring: true,
        ignoreImports: true,
      },
    ],
    'class-methods-use-this': 'off',
    'no-return-await': 'off',
    'max-classes-per-file': 'off',
    'no-restricted-globals': 'off',
    'global-require': 'off',
    'no-shadow': 'off',
    'func-names': 'off',
    'object-curly-newline': ['error', {
      consistent: true,
    }],
    'no-param-reassign': ['error', {
      props: false,
    }],
    'no-whitespace-before-property': 'error',
    'key-spacing': ['error', {
      beforeColon: false,
      afterColon: true,
    }],
    'space-before-blocks': 'error',
    'arrow-spacing': 'error',
    'space-infix-ops': ['error', {
      int32Hint: false,
    }],
    'comma-spacing': 'error',
    'keyword-spacing': 'error',
    'no-trailing-spaces': 'error',
    'no-multi-spaces': 'error',
    'function-paren-newline': ['error', 'multiline'],
    'function-call-argument-newline': ['error', 'consistent'],
    'no-unneeded-ternary': 'error',
    'no-else-return': 'error',
    'unicorn/filename-case': ['warn', {
      'case': 'kebabCase',
    }],
    'no-multiple-empty-lines': ['error', {
      'max': 1,
      'maxBOF': 0,
    }],

    'import/extensions': 0,
    'import/prefer-default-export': 'off',
    'import/no-unresolved': 'error',
    'import/order': ['error', {
      'newlines-between': 'always',
    }],

    '@typescript-eslint/explicit-member-accessibility': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/ban-ts-ignore': 'off',
    '@typescript-eslint/prefer-ts-expect-error': 'error',
    '@typescript-eslint/ban-ts-comment': 'warn',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/semi': ['error', 'never'],
    '@typescript-eslint/member-delimiter-style': ['error', {
      multiline: {
        delimiter: 'none',
      },
    }],
    '@typescript-eslint/no-empty-function': 'off',
    '@typescript-eslint/no-unused-vars': 'warn',
    '@typescript-eslint/no-empty-interface': 'off',

    'react/react-in-jsx-scope': 'off',
    'react/jsx-first-prop-new-line': ['error', 'multiline'],
    'react/jsx-closing-tag-location': 'error',
    'react/jsx-closing-bracket-location': 'error',
    'react/jsx-curly-spacing': ['warn', 'never'],
    'react/jsx-equals-spacing': ['error', 'never'],
    'react/sort-comp': ['warn', {
      order: [
        'static-methods',
        'instance-variables',
        'lifecycle',
        'getters',
        'setters',
        'everything-else',
        'render',
      ],
    }],
    'jsx-quotes': ['error', 'prefer-double'],

    'react-hooks/rules-of-hooks': 'error',
  },
}
